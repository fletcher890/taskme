// Generated by CoffeeScript 1.7.1
(function() {
  define(["jquery", "underscore", "backbone", "vent", "views/task", "text!templates/tasks/tasks.haml", "text!templates/partials/filter_dropdown.haml", "handlebars"], function($, _, Backbone, Vent, TaskView, tasksTemplate, filterTemplate, Handlebars) {
    var tasks;
    tasks = Backbone.View.extend({
      template: Handlebars.compile(tasksTemplate),
      initialize: function() {
        this.childViews = [];
        this.listenTo(this.collection, "reset", this.render);
        this.listenTo(Vent, "task:create", this.renderNewTask);
        this.listenTo(Vent, "collection:add", this.render);
        return this.collection.fetch({
          reset: true
        });
      },
      render: function() {
        this.$el.html(this.template());
        this.$el.find("#filterablearea").append(this.createImportanceSelect());
        this.collection.forEach(this.renderTask, this);
        Vent.trigger('app.event');
        return this;
      },
      renderNewTask: function(model) {
        this.collection.fetch({
          reset: true
        });
        return Vent.trigger("collection:add");
      },
      renderTask: function(model) {
        var view;
        view = new TaskView({
          model: model,
          collection: this.collection
        });
        this.childViews.push(view);
        return this.$('#taskList').append(view.render().el);
      },
      getImportances: function() {},
      createImportanceSelect: function() {
        return $(filterTemplate);
      }
    });
    return tasks;
  });

}).call(this);
