// Generated by CoffeeScript 1.7.1
(function() {
  define(['backbone', 'sinon', 'public/javascripts/backbone/models/todo', 'public/javascripts/backbone/collections/todos', 'public/javascripts/vendor/sinon/jasmine-sinon'], function(Backbone, Sinon, Todo, Todos, jsinon) {
    return describe("Todos collection", function() {
      beforeEach(function() {
        this.model = new Backbone.Model({
          id: 5,
          title: "Todo 2",
          priority: 2
        });
        this.todo1 = new Backbone.Model({
          id: 1,
          title: "Todo 1",
          priority: 3
        });
        this.todo2 = new Backbone.Model({
          id: 2,
          title: "Todo 2",
          priority: 2
        });
        this.todo3 = new Backbone.Model({
          id: 3,
          title: "Todo 3",
          priority: 1
        });
        this.todos = new Todos();
        this.todos.model = Todo;
        this.todos.add({
          id: 5,
          title: "Foo"
        });
      });
      afterEach(function() {});
      it('should add a model', function() {
        return expect(this.todos.length).toEqual(1);
      });
      it('should find a model by id', function() {
        return expect(this.todos.get(5).get('id')).toEqual(5);
      });
      it('should order models by prioirty', function() {
        this.todos.add([this.todo1, this.todo2, this.todo3]);
        expect(this.todos.at(0)).toEqual(this.todo3);
        return expect(this.todos.at(1)).toEqual(this.todo2);
      });
      return describe("when fetching collection from server", function() {
        beforeEach(function() {
          this.server = sinon.fakeServer.create();
          this.server.respondWith("GET", "/todos", [
            200, {
              "Content-Type": "application/json"
            }, JSON.stringify([
              {
                id: 1,
                text: "Provide examples",
                done: true
              }
            ])
          ]);
        });
        afterEach(function() {
          this.server.restore();
        });
        it('should make the correct request', function() {
          this.todos.fetch();
          expect(this.server.requests.length).toEqual(1);
          expect(this.server.requests[0].method).toEqual("GET");
          return expect(this.server.requests[0].url).toEqual("/todos");
        });
        return it('should parse todos from the response', function() {
          this.todos.fetch();
          this.server.respond();
          return expect(this.todos.length).toEqual(1);
        });
      });
    });
  });

}).call(this);
